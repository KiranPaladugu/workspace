/* ********************************************************************************
 * All rights reserved.
 ******************************************************************************* */
package com.tcs.tools;

import java.io.*;

public class ResponseHandler implements Runnable {

    private SSHConnection connection;
    private BlockingQueue<Message<String>> messageQueue;

    /**
     * @param messageQueue 
     * 
     */
    public ResponseHandler(SSHConnection connection, BlockingQueue<Message<String>> messageQueue) {
        this.connection = connection;
        this.messageQueue = messageQueue;
        Thread t = new Thread(this);
        t.setName(connection.getHostname() + " - " + this.getClass().getSimpleName());
        t.start();
    }

    public void run() {
        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        while (connection.isConnected()) {
            String line = null;
            try {
                StringBuffer buffer = new StringBuffer();
                while (reader.ready() && (line = reader.readLine()) != null) {
//                    System.out.println(line);
                    buffer.append(line + '\n');

                }
                if (buffer.length() > 0) {                    
                    pushReadMessage(buffer.toString());
                    buffer = new StringBuffer();
                }
                Thread.sleep(200);
            } catch (IOException | InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public void pushReadMessage(String message) {
        try {
            messageQueue.insert(new Message<String>(Message.RESPONSE, message));
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
