/* ********************************************************************************
 * All rights reserved.
 ******************************************************************************* */
package com.pack.test;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.ThreadPoolExecutor;

public class ThreadExceutorServiceMonitor implements Runnable{
    private int count =1; 
    
    private ExecutorService executorService;
    
    public ThreadExceutorServiceMonitor(ExecutorService executorService) {
        this.executorService=executorService;
    }
    
    @Override
    public void run() {
        while(count<=100){
            if(executorService instanceof ThreadPoolExecutor){
                ThreadPoolExecutor excecutor = (ThreadPoolExecutor) executorService;
                if(excecutor.getActiveCount()==1 && excecutor.getCompletedTaskCount()>1){
                    System.out.println("Completed all Executions");
                   break;
                }
            }
            System.out.println(executorService);
            try {
                Thread.sleep(1000);
                count ++;
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

}
