/* ********************************************************************************
 * All rights reserved.
 ******************************************************************************* */
package com.tcs.tools;

import java.io.BufferedWriter;
import java.io.OutputStreamWriter;

public class RequestHandler implements Runnable {

    private SSHConnection connection;
    private BlockingQueue<Message<String>> messageQueue;

    /**
     * @param messageQueue
     * 
     */
    public RequestHandler(SSHConnection connection, BlockingQueue<Message<String>> messageQueue) {
        this.connection = connection;
        this.messageQueue = messageQueue;
        Thread t = new Thread(this);
        t.setName(connection.getHostname() + " - " + this.getClass().getSimpleName());
        t.start();
    }

    public void run() {
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(connection.getOutputStream()));
        try {
            while (connection.isConnected()) {
                String message = getMessageToWirte();
                if (message != null && message.length() > 0) {
                    System.out.println("Wriging message::: to server");
                    System.out.println(message);
                    writer.write(message);
                    writer.flush();
                } else {
                    Thread.sleep(200);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String getMessageToWirte() {
        if(messageQueue.peek().isRequest()){
            try {
                return messageQueue.remove().getMessage();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }else{
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        return null;
    }
}
