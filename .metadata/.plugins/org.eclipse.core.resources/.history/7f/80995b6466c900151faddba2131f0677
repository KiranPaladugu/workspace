/* ********************************************************************************
 * All rights reserved.
 ******************************************************************************* */
package com.pack.test;

public class ThreadExample implements Runnable{

    private Object obj;
    private String name;
    private ThreadExample previous;
    /**
     * 
     */
    public ThreadExample(Object obj,ThreadExample previous) {
        this.obj = obj;
        this.previous = previous;
    }
    private static int count = 1;
    @Override
    public void run() {
        this.name = "Thread-"+count++;
        Thread.currentThread().setName(name);
        for(int i=0;i<25;i++){
            log("- executing:"+i);
            log(" Waiting on Object");            
            try {
                if(count%4==0){
                    log("Notifing All");
                    previous.callNotify();
                }
                wait();
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
    
    public void log(String log){
        System.out.println(getThreadName()+" "+log);
    }
    
    public String getThreadName(){
        return this.name;
    }
    
    public void callNotify(){
        if(previous!=null){
            previous.log(previous.getThreadName()+" notified by "+getThreadName());
            previous.callNotify();
        }
        log("Notified..");
        notify();
    }

}
